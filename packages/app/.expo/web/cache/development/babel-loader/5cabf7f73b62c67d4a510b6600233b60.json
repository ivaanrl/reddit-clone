{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/shared/modules/orderBar/OrderBar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { dropdownStyles } from \"../../../styles\";\nimport { useSpring, animated } from \"react-spring\";\nimport Constants from \"expo-constants\";\nimport { useSelector } from \"react-redux\";\nvar AnimatedView = animated(View);\n\nvar OrderBar = function OrderBar(props) {\n  var theme = useTheme();\n  var statusBarHeight = Constants.statusBarHeight;\n  var screenHeight = Dimensions.get(\"screen\").height;\n  var windowHeight = Dimensions.get(\"window\").height;\n  var colors = theme.colors;\n  var getPostsHomepage = props.getPostsHomepage,\n      defaultSort = props.defaultSort;\n\n  var _useState = useState(defaultSort),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeOption = _useState2[0],\n      setActiveOption = _useState2[1];\n\n  var styles = StyleSheet.create({\n    container: _objectSpread(_objectSpread({}, dropdownStyles.small), {}, {\n      backgroundColor: colors.primary,\n      justifyContent: \"center\",\n      zIndex: 0\n    }),\n    selectedOption: {\n      color: colors.text\n    },\n    dropdownOptionContainer: {\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      marginRight: 10,\n      marginLeft: 10,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      backgroundColor: colors.card\n    },\n    dropdownOption: {\n      paddingTop: 10,\n      paddingBottom: 10,\n      paddingLeft: 15,\n      backgroundColor: colors.card,\n      color: colors.textMain,\n      marginRight: 10,\n      marginLeft: 10,\n      alignSelf: \"stretch\",\n      textAlign: \"left\",\n      justifyContent: \"center\"\n    },\n    dropdownOptionTitle: {\n      paddingLeft: 15,\n      backgroundColor: colors.card,\n      color: colors.textMuted,\n      marginRight: 10,\n      marginLeft: 10,\n      fontWeight: \"700\",\n      fontSize: 12,\n      paddingBottom: 10,\n      paddingTop: 10,\n      borderColor: \"transparent\",\n      borderBottomColor: colors.colorLine,\n      borderWidth: 1,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4\n    },\n    dropdownModal: {\n      position: \"absolute\",\n      height: windowHeight - statusBarHeight,\n      width: \"100%\",\n      backgroundColor: colors.modalColor,\n      zIndex: 900\n    }\n  });\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drodpdownOptionsVisible = _useState4[0],\n      setDropdownOptionsVisible = _useState4[1];\n\n  var dropdownAnimationProps = useSpring({\n    position: \"absolute\",\n    opacity: drodpdownOptionsVisible ? 1 : 0,\n    bottom: drodpdownOptionsVisible ? 0 : -200\n  });\n\n  var handleSelectClick = function handleSelectClick() {\n    setDropdownOptionsVisible(!drodpdownOptionsVisible);\n  };\n\n  var capitalizeString = function capitalizeString(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  var homepagePage = useSelector(function (state) {\n    return state.homepage.page;\n  });\n  useEffect(function () {\n    var timeSort = \"all_time\";\n    var sortOrder = \"\";\n\n    if (getPostsHomepage) {\n      console.log(\"gonna send request\");\n      getPostsHomepage(activeOption, timeSort, homepagePage);\n    }\n  }, [activeOption, defaultSort]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSelectClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.selectedOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \" \", capitalizeString(activeOption)))), drodpdownOptionsVisible ? React.createElement(TouchableOpacity, {\n    style: styles.dropdownModal,\n    onPress: handleSelectClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(AnimatedView, {\n    style: _objectSpread(_objectSpread({}, dropdownAnimationProps), styles.dropdownOptionContainer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.dropdownOptionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"SORT POST BY\"), React.createElement(Text, {\n    style: styles.dropdownOption,\n    onPress: handleSelectClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Hot\"), React.createElement(Text, {\n    style: styles.dropdownOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"New\"), React.createElement(Text, {\n    style: styles.dropdownOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Top\"))) : null);\n};\n\nexport default OrderBar;","map":{"version":3,"sources":["/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/shared/modules/orderBar/OrderBar.tsx"],"names":["React","useState","useEffect","useTheme","dropdownStyles","useSpring","animated","Constants","useSelector","AnimatedView","View","OrderBar","props","theme","statusBarHeight","screenHeight","Dimensions","get","height","windowHeight","colors","getPostsHomepage","defaultSort","activeOption","setActiveOption","styles","StyleSheet","create","container","small","backgroundColor","primary","justifyContent","zIndex","selectedOption","color","text","dropdownOptionContainer","position","left","right","marginRight","marginLeft","borderTopLeftRadius","borderTopRightRadius","card","dropdownOption","paddingTop","paddingBottom","paddingLeft","textMain","alignSelf","textAlign","dropdownOptionTitle","textMuted","fontWeight","fontSize","borderColor","borderBottomColor","colorLine","borderWidth","dropdownModal","width","modalColor","drodpdownOptionsVisible","setDropdownOptionsVisible","dropdownAnimationProps","opacity","bottom","handleSelectClick","capitalizeString","str","charAt","toUpperCase","slice","homepagePage","state","homepage","page","timeSort","sortOrder","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Picker,\n  StyleSheet,\n  TouchableOpacity,\n  Dimensions,\n  Modal,\n} from \"react-native\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { dropdownStyles } from \"../../../styles\";\nimport { ThemeColors } from \"../../../themes/themes\";\nimport { useSpring, animated } from \"react-spring\";\nimport Constants from \"expo-constants\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"@reddit-clone/controller\";\n\ninterface Props {\n  getPostsWithUsername?: (\n    username: string,\n    order: string,\n    time: string,\n    page: number\n  ) => void;\n  getPostsHomepage?: (order: string, time: string, page: number) => void;\n\n  defaultSort: string;\n  reducer: string;\n}\n\nconst AnimatedView: any = animated(View);\n\nconst OrderBar = (props: Props) => {\n  const theme = useTheme();\n  const statusBarHeight = Constants.statusBarHeight;\n  const screenHeight = Dimensions.get(\"screen\").height;\n  const windowHeight = Dimensions.get(\"window\").height;\n  const colors = theme.colors as ThemeColors;\n  const {\n    getPostsHomepage,\n    //getPostsWithUsername,\n    defaultSort,\n    //reducer,\n  } = props;\n\n  const [activeOption, setActiveOption] = useState<string>(defaultSort);\n\n  const styles = StyleSheet.create({\n    container: {\n      ...dropdownStyles.small,\n      backgroundColor: colors.primary,\n      justifyContent: \"center\",\n      zIndex: 0,\n    },\n    selectedOption: {\n      color: colors.text,\n    },\n    dropdownOptionContainer: {\n      //...StyleSheet.absoluteFillObject,\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      marginRight: 10,\n      marginLeft: 10,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      backgroundColor: colors.card,\n    },\n    dropdownOption: {\n      paddingTop: 10,\n      paddingBottom: 10,\n      paddingLeft: 15,\n      backgroundColor: colors.card,\n      color: colors.textMain,\n      marginRight: 10,\n      marginLeft: 10,\n      alignSelf: \"stretch\",\n      textAlign: \"left\",\n      justifyContent: \"center\",\n    },\n    dropdownOptionTitle: {\n      paddingLeft: 15,\n      backgroundColor: colors.card,\n      color: colors.textMuted,\n      marginRight: 10,\n      marginLeft: 10,\n      fontWeight: \"700\",\n      fontSize: 12,\n      paddingBottom: 10,\n      paddingTop: 10,\n      borderColor: \"transparent\",\n      borderBottomColor: colors.colorLine,\n      borderWidth: 1,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n    dropdownModal: {\n      position: \"absolute\",\n      height: windowHeight - statusBarHeight,\n      width: \"100%\",\n      backgroundColor: colors.modalColor,\n      zIndex: 900,\n    },\n  });\n\n  const [drodpdownOptionsVisible, setDropdownOptionsVisible] = useState<\n    boolean\n  >(false);\n\n  const dropdownAnimationProps = useSpring({\n    position: \"absolute\",\n    opacity: drodpdownOptionsVisible ? 1 : 0,\n    bottom: drodpdownOptionsVisible ? 0 : -200,\n  });\n\n  const handleSelectClick = () => {\n    setDropdownOptionsVisible(!drodpdownOptionsVisible);\n  };\n\n  const capitalizeString = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  const homepagePage = useSelector((state: State) => state.homepage.page);\n\n  useEffect(() => {\n    const timeSort = \"all_time\"; //Have to set this up later\n    const sortOrder = \"\"; //Have to set this up later\n\n    if (getPostsHomepage) {\n      console.log(\"gonna send request\");\n      getPostsHomepage(activeOption, timeSort, homepagePage);\n    }\n  }, [activeOption, defaultSort]);\n\n  return (\n    <React.Fragment>\n      <View style={styles.container}>\n        <TouchableOpacity onPress={handleSelectClick}>\n          <Text style={styles.selectedOption}>\n            {\" \"}\n            {capitalizeString(activeOption)}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      {drodpdownOptionsVisible ? (\n        <TouchableOpacity\n          style={styles.dropdownModal}\n          onPress={handleSelectClick}\n        >\n          <AnimatedView\n            style={{\n              ...dropdownAnimationProps,\n              ...styles.dropdownOptionContainer,\n            }}\n          >\n            <Text style={styles.dropdownOptionTitle}>SORT POST BY</Text>\n            <Text style={styles.dropdownOption} onPress={handleSelectClick}>\n              Hot\n            </Text>\n            <Text style={styles.dropdownOption}>New</Text>\n            <Text style={styles.dropdownOption}>Top</Text>\n          </AnimatedView>\n        </TouchableOpacity>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default OrderBar;\n"]},"metadata":{},"sourceType":"module"}