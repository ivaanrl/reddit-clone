{"ast":null,"code":"var _jsxFileName = \"/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/modules/post/PostConnector.tsx\";\nimport React from \"react\";\nimport { PostController } from \"@reddit-clone/controller\";\nimport PostView from \"./ui/PostView\";\n\nvar PostConnector = function PostConnector(props) {\n  return React.createElement(PostController, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var sanitizeContent = _ref.sanitizeContent,\n        formatDate = _ref.formatDate,\n        vote = _ref.vote;\n    return React.createElement(PostView, {\n      postInfo: props.postInfo,\n      formatDate: formatDate,\n      sanitizeContent: sanitizeContent,\n      vote: vote,\n      showSubredditName: props.showSubredditName,\n      reducer: props.reducer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    });\n  });\n};\n\nexport default PostConnector;","map":{"version":3,"sources":["/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/modules/post/PostConnector.tsx"],"names":["React","PostController","PostView","PostConnector","props","sanitizeContent","formatDate","vote","postInfo","showSubredditName","reducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,QAAP;;AAuBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAkB;AACtC,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGC,eAAH,QAAGA,eAAH;AAAA,QAAoBC,UAApB,QAAoBA,UAApB;AAAA,QAAgCC,IAAhC,QAAgCA,IAAhC;AAAA,WACC,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEH,KAAK,CAACI,QADlB;AAEE,MAAA,UAAU,EAAEF,UAFd;AAGE,MAAA,eAAe,EAAED,eAHnB;AAIE,MAAA,IAAI,EAAEE,IAJR;AAKE,MAAA,iBAAiB,EAAEH,KAAK,CAACK,iBAL3B;AAME,MAAA,OAAO,EAAEL,KAAK,CAACM,OANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAAA,GADH,CADF;AAcD,CAfD;;AAiBA,eAAeP,aAAf","sourcesContent":["import React from \"react\";\nimport { PostController } from \"@reddit-clone/controller\";\nimport PostView from \"./ui/PostView\";\n\nexport interface Props {\n  postInfo: {\n    author_id: string;\n    author_username: string;\n    content: string[] | null;\n    createdAt: string;\n    updatedAt: string;\n    subreddit_name: string;\n    votes: string;\n    title: string;\n    id: string;\n    user_vote: number;\n    index: number;\n    comment_count: number;\n    link: string | null;\n    type: string;\n  };\n  reducer: string;\n  showSubredditName: boolean;\n}\n\nconst PostConnector = (props: Props) => {\n  return (\n    <PostController>\n      {({ sanitizeContent, formatDate, vote }) => (\n        <PostView\n          postInfo={props.postInfo}\n          formatDate={formatDate}\n          sanitizeContent={sanitizeContent}\n          vote={vote}\n          showSubredditName={props.showSubredditName}\n          reducer={props.reducer}\n        />\n      )}\n    </PostController>\n  );\n};\n\nexport default PostConnector;\n"]},"metadata":{},"sourceType":"module"}