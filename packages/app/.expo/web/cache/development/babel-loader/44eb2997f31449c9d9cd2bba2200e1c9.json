{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/shared/modules/orderBar/OrderBar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useTheme, useRoute } from \"@react-navigation/native\";\nimport { dropdownStyles } from \"../../../styles\";\nimport { useSpring, animated } from \"react-spring\";\nimport Constants from \"expo-constants\";\nimport { useSelector } from \"react-redux\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport HotSVG from \"../../svgs/HotSVG\";\nimport TopSVG from \"../../svgs/TopSVG\";\nimport NewSVG from \"../../svgs/NewSVG\";\nvar AnimatedView = animated(View);\n\nvar OrderBar = function OrderBar(props) {\n  var theme = useTheme();\n  var colors = theme.colors;\n  var statusBarHeight = Constants.statusBarHeight;\n  var windowHeight = Dimensions.get(\"window\").height;\n  var route = useRoute();\n  var getPostsHomepage = props.getPostsHomepage,\n      getPostsWithUsername = props.getPostsWithUsername,\n      defaultSort = props.defaultSort,\n      reducer = props.reducer;\n\n  var _useState = useState(defaultSort),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeOption = _useState2[0],\n      setActiveOption = _useState2[1];\n\n  var _useState3 = useState(React.createElement(HotSVG, {\n    fillColor: colors.textMuted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeOptionIcon = _useState4[0],\n      setActiveOptionIcon = _useState4[1];\n\n  var _useState5 = useState(\"all_time\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeSort = _useState6[0],\n      setTimeSort = _useState6[1];\n\n  var styles = StyleSheet.create({\n    container: _objectSpread(_objectSpread({}, dropdownStyles.small), {}, {\n      backgroundColor: colors.primary,\n      justifyContent: \"center\",\n      zIndex: 0,\n      marginTop: -15,\n      marginBottom: 10,\n      marginLeft: 5\n    }),\n    selectedOptionContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    selectedOption: {\n      color: colors.textMuted,\n      marginRight: 5\n    },\n    dropdownOptionsContainer: {\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      marginRight: 10,\n      marginLeft: 10,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      backgroundColor: colors.card\n    },\n    dropdownOptionContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingTop: 10,\n      paddingBottom: 10,\n      paddingLeft: 15,\n      marginRight: 10,\n      marginLeft: 10\n    },\n    dropdownOption: {\n      backgroundColor: colors.card,\n      alignSelf: \"stretch\",\n      textAlign: \"left\",\n      justifyContent: \"center\",\n      marginLeft: 10\n    },\n    dropdownOptionIconContainer: {\n      width: 15,\n      height: 15\n    },\n    dropdownOptionTitle: {\n      paddingLeft: 15,\n      backgroundColor: colors.card,\n      color: colors.textMuted,\n      marginRight: 10,\n      marginLeft: 10,\n      fontWeight: \"700\",\n      fontSize: 12,\n      paddingBottom: 10,\n      paddingTop: 10,\n      borderColor: \"transparent\",\n      borderBottomColor: colors.colorLine,\n      borderWidth: 1,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4\n    },\n    dropdownModal: {\n      position: \"absolute\",\n      height: windowHeight - statusBarHeight,\n      width: \"100%\",\n      backgroundColor: colors.modalColor,\n      zIndex: 900\n    }\n  });\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      drodpdownOptionsVisible = _useState8[0],\n      setDropdownOptionsVisible = _useState8[1];\n\n  var dropdownAnimationProps = useSpring({\n    opacity: drodpdownOptionsVisible ? 1 : 0,\n    bottom: drodpdownOptionsVisible ? 0 : -200\n  });\n\n  var handleSelectClick = function handleSelectClick() {\n    setDropdownOptionsVisible(!drodpdownOptionsVisible);\n  };\n\n  var capitalizeString = function capitalizeString(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  var homepagePage = useSelector(function (state) {\n    return state.homepage.page;\n  });\n  var subredditPage = useSelector(function (state) {\n    return state.subreddit.page;\n  });\n  var profilePage = useSelector(function (state) {\n    return state.profile.page;\n  });\n  useEffect(function () {\n    if (getPostsHomepage) {\n      getPostsHomepage(activeOption, timeSort, homepagePage);\n    } else if (getPostsWithUsername) {\n      if (reducer === \"profile\") {} else if (reducer === \"subreddit\") {\n        var params = route.params;\n\n        if (params && params.name !== \"\") {\n          getPostsWithUsername(params.name, activeOption, timeSort, subredditPage);\n        }\n      }\n    }\n\n    switch (activeOption) {\n      case \"hot\":\n        setActiveOptionIcon(React.createElement(HotSVG, {\n          fillColor: colors.textMuted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }\n        }));\n        break;\n\n      case \"top\":\n        setActiveOptionIcon(React.createElement(TopSVG, {\n          fillColor: colors.textMuted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }\n        }));\n        break;\n\n      case \"new\":\n        setActiveOptionIcon(React.createElement(NewSVG, {\n          fillColor: colors.textMuted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }\n        }));\n        break;\n\n      default:\n        setActiveOptionIcon(React.createElement(HotSVG, {\n          fillColor: colors.textMuted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }\n        }));\n    }\n  }, [activeOption, defaultSort, route]);\n\n  var handleSelectDropdownOption = function handleSelectDropdownOption(selectedOption) {\n    setActiveOption(selectedOption);\n    setDropdownOptionsVisible(false);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSelectClick,\n    style: styles.selectedOptionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 15,\n      height: 15,\n      marginRight: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, activeOptionIcon), React.createElement(Text, {\n    style: styles.selectedOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, capitalizeString(activeOption), \" posts\"), React.createElement(Icon, {\n    name: \"caret-down\",\n    color: colors.textMuted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }))), drodpdownOptionsVisible ? React.createElement(TouchableOpacity, {\n    style: styles.dropdownModal,\n    onPress: handleSelectClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, React.createElement(AnimatedView, {\n    style: _objectSpread(_objectSpread({}, dropdownAnimationProps), styles.dropdownOptionsContainer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.dropdownOptionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"SORT POST BY\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleSelectDropdownOption(\"hot\");\n    },\n    style: styles.dropdownOptionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.dropdownOptionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, React.createElement(HotSVG, {\n    fillColor: activeOption === \"hot\" ? colors.textMain : colors.textMuted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.dropdownOption), {}, {\n      color: activeOption === \"hot\" ? colors.textMain : colors.textMuted\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Hot\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleSelectDropdownOption(\"new\");\n    },\n    style: styles.dropdownOptionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.dropdownOptionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, React.createElement(NewSVG, {\n    fillColor: activeOption === \"new\" ? colors.textMain : colors.textMuted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.dropdownOption), {}, {\n      color: activeOption === \"new\" ? colors.textMain : colors.textMuted\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, \"New\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleSelectDropdownOption(\"top\");\n    },\n    style: styles.dropdownOptionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.dropdownOptionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, React.createElement(TopSVG, {\n    fillColor: activeOption === \"top\" ? colors.textMain : colors.textMuted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.dropdownOption), {}, {\n      color: activeOption === \"top\" ? colors.textMain : colors.textMuted\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, \"Top\")))) : null);\n};\n\nexport default OrderBar;","map":{"version":3,"sources":["/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/shared/modules/orderBar/OrderBar.tsx"],"names":["React","useState","useEffect","useTheme","useRoute","dropdownStyles","useSpring","animated","Constants","useSelector","Icon","HotSVG","TopSVG","NewSVG","AnimatedView","View","OrderBar","props","theme","colors","statusBarHeight","windowHeight","Dimensions","get","height","route","getPostsHomepage","getPostsWithUsername","defaultSort","reducer","activeOption","setActiveOption","textMuted","activeOptionIcon","setActiveOptionIcon","timeSort","setTimeSort","styles","StyleSheet","create","container","small","backgroundColor","primary","justifyContent","zIndex","marginTop","marginBottom","marginLeft","selectedOptionContainer","flexDirection","alignItems","selectedOption","color","marginRight","dropdownOptionsContainer","position","left","right","borderTopLeftRadius","borderTopRightRadius","card","dropdownOptionContainer","paddingTop","paddingBottom","paddingLeft","dropdownOption","alignSelf","textAlign","dropdownOptionIconContainer","width","dropdownOptionTitle","fontWeight","fontSize","borderColor","borderBottomColor","colorLine","borderWidth","dropdownModal","modalColor","drodpdownOptionsVisible","setDropdownOptionsVisible","dropdownAnimationProps","opacity","bottom","handleSelectClick","capitalizeString","str","charAt","toUpperCase","slice","homepagePage","state","homepage","page","subredditPage","subreddit","profilePage","profile","params","name","handleSelectDropdownOption","textMain"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAQA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,0BAAnC;AACA,SAASC,cAAT;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AAeA,IAAMC,YAAiB,GAAGP,QAAQ,CAACQ,IAAD,CAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAkB;AACjC,MAAMC,KAAK,GAAGf,QAAQ,EAAtB;AACA,MAAMgB,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,MAAMC,eAAe,GAAGZ,SAAS,CAACY,eAAlC;AACA,MAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA9C;AACA,MAAMC,KAAK,GAAGrB,QAAQ,EAAtB;AALiC,MAO/BsB,gBAP+B,GAW7BT,KAX6B,CAO/BS,gBAP+B;AAAA,MAQ/BC,oBAR+B,GAW7BV,KAX6B,CAQ/BU,oBAR+B;AAAA,MAS/BC,WAT+B,GAW7BX,KAX6B,CAS/BW,WAT+B;AAAA,MAU/BC,OAV+B,GAW7BZ,KAX6B,CAU/BY,OAV+B;;AAAA,kBAaO5B,QAAQ,CAAS2B,WAAT,CAbf;AAAA;AAAA,MAa1BE,YAb0B;AAAA,MAaZC,eAbY;;AAAA,mBAce9B,QAAQ,CACtD,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEkB,MAAM,CAACa,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsD,CAdvB;AAAA;AAAA,MAc1BC,gBAd0B;AAAA,MAcRC,mBAdQ;;AAAA,mBAkBDjC,QAAQ,CAAS,UAAT,CAlBP;AAAA;AAAA,MAkB1BkC,QAlB0B;AAAA,MAkBhBC,WAlBgB;;AAoBjC,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,SAAS,kCACJnC,cAAc,CAACoC,KADX;AAEPC,MAAAA,eAAe,EAAEvB,MAAM,CAACwB,OAFjB;AAGPC,MAAAA,cAAc,EAAE,QAHT;AAIPC,MAAAA,MAAM,EAAE,CAJD;AAKPC,MAAAA,SAAS,EAAE,CAAC,EALL;AAMPC,MAAAA,YAAY,EAAE,EANP;AAOPC,MAAAA,UAAU,EAAE;AAPL,MADsB;AAU/BC,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,aAAa,EAAE,KADQ;AAEvBC,MAAAA,UAAU,EAAE;AAFW,KAVM;AAc/BC,IAAAA,cAAc,EAAE;AACdC,MAAAA,KAAK,EAAElC,MAAM,CAACa,SADA;AAEdsB,MAAAA,WAAW,EAAE;AAFC,KAde;AAkB/BC,IAAAA,wBAAwB,EAAE;AAExBC,MAAAA,QAAQ,EAAE,UAFc;AAGxBC,MAAAA,IAAI,EAAE,CAHkB;AAIxBC,MAAAA,KAAK,EAAE,CAJiB;AAKxBJ,MAAAA,WAAW,EAAE,EALW;AAMxBN,MAAAA,UAAU,EAAE,EANY;AAOxBW,MAAAA,mBAAmB,EAAE,CAPG;AAQxBC,MAAAA,oBAAoB,EAAE,CARE;AASxBlB,MAAAA,eAAe,EAAEvB,MAAM,CAAC0C;AATA,KAlBK;AA6B/BC,IAAAA,uBAAuB,EAAE;AACvBZ,MAAAA,aAAa,EAAE,KADQ;AAEvBC,MAAAA,UAAU,EAAE,QAFW;AAGvBY,MAAAA,UAAU,EAAE,EAHW;AAIvBC,MAAAA,aAAa,EAAE,EAJQ;AAKvBC,MAAAA,WAAW,EAAE,EALU;AAMvBX,MAAAA,WAAW,EAAE,EANU;AAOvBN,MAAAA,UAAU,EAAE;AAPW,KA7BM;AAsC/BkB,IAAAA,cAAc,EAAE;AACdxB,MAAAA,eAAe,EAAEvB,MAAM,CAAC0C,IADV;AAEdM,MAAAA,SAAS,EAAE,SAFG;AAGdC,MAAAA,SAAS,EAAE,MAHG;AAIdxB,MAAAA,cAAc,EAAE,QAJF;AAKdI,MAAAA,UAAU,EAAE;AALE,KAtCe;AA6C/BqB,IAAAA,2BAA2B,EAAE;AAC3BC,MAAAA,KAAK,EAAE,EADoB;AAE3B9C,MAAAA,MAAM,EAAE;AAFmB,KA7CE;AAiD/B+C,IAAAA,mBAAmB,EAAE;AACnBN,MAAAA,WAAW,EAAE,EADM;AAEnBvB,MAAAA,eAAe,EAAEvB,MAAM,CAAC0C,IAFL;AAGnBR,MAAAA,KAAK,EAAElC,MAAM,CAACa,SAHK;AAInBsB,MAAAA,WAAW,EAAE,EAJM;AAKnBN,MAAAA,UAAU,EAAE,EALO;AAMnBwB,MAAAA,UAAU,EAAE,KANO;AAOnBC,MAAAA,QAAQ,EAAE,EAPS;AAQnBT,MAAAA,aAAa,EAAE,EARI;AASnBD,MAAAA,UAAU,EAAE,EATO;AAUnBW,MAAAA,WAAW,EAAE,aAVM;AAWnBC,MAAAA,iBAAiB,EAAExD,MAAM,CAACyD,SAXP;AAYnBC,MAAAA,WAAW,EAAE,CAZM;AAanBlB,MAAAA,mBAAmB,EAAE,CAbF;AAcnBC,MAAAA,oBAAoB,EAAE;AAdH,KAjDU;AAiE/BkB,IAAAA,aAAa,EAAE;AACbtB,MAAAA,QAAQ,EAAE,UADG;AAEbhC,MAAAA,MAAM,EAAEH,YAAY,GAAGD,eAFV;AAGbkD,MAAAA,KAAK,EAAE,MAHM;AAIb5B,MAAAA,eAAe,EAAEvB,MAAM,CAAC4D,UAJX;AAKblC,MAAAA,MAAM,EAAE;AALK;AAjEgB,GAAlB,CAAf;;AApBiC,mBA8F4B5C,QAAQ,CAEnE,KAFmE,CA9FpC;AAAA;AAAA,MA8F1B+E,uBA9F0B;AAAA,MA8FDC,yBA9FC;;AAkGjC,MAAMC,sBAAsB,GAAG5E,SAAS,CAAC;AACvC6E,IAAAA,OAAO,EAAEH,uBAAuB,GAAG,CAAH,GAAO,CADA;AAEvCI,IAAAA,MAAM,EAAEJ,uBAAuB,GAAG,CAAH,GAAO,CAAC;AAFA,GAAD,CAAxC;;AAKA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BJ,IAAAA,yBAAyB,CAAC,CAACD,uBAAF,CAAzB;AACD,GAFD;;AAIA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAiB;AACxC,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAArC;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAGlF,WAAW,CAAC,UAACmF,KAAD;AAAA,WAAkBA,KAAK,CAACC,QAAN,CAAeC,IAAjC;AAAA,GAAD,CAAhC;AACA,MAAMC,aAAa,GAAGtF,WAAW,CAAC,UAACmF,KAAD;AAAA,WAAkBA,KAAK,CAACI,SAAN,CAAgBF,IAAlC;AAAA,GAAD,CAAjC;AACA,MAAMG,WAAW,GAAGxF,WAAW,CAAC,UAACmF,KAAD;AAAA,WAAkBA,KAAK,CAACM,OAAN,CAAcJ,IAAhC;AAAA,GAAD,CAA/B;AAEA5F,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwB,gBAAJ,EAAsB;AACpBA,MAAAA,gBAAgB,CAACI,YAAD,EAAeK,QAAf,EAAyBwD,YAAzB,CAAhB;AACD,KAFD,MAEO,IAAIhE,oBAAJ,EAA0B;AAC/B,UAAIE,OAAO,KAAK,SAAhB,EAA2B,CAC1B,CADD,MACO,IAAIA,OAAO,KAAK,WAAhB,EAA6B;AAClC,YAAMsE,MAAM,GAAG1E,KAAK,CAAC0E,MAArB;;AACA,YAAIA,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,EAA9B,EAAkC;AAChCzE,UAAAA,oBAAoB,CAClBwE,MAAM,CAACC,IADW,EAElBtE,YAFkB,EAGlBK,QAHkB,EAIlB4D,aAJkB,CAApB;AAMD;AACF;AACF;;AACD,YAAQjE,YAAR;AACE,WAAK,KAAL;AACEI,QAAAA,mBAAmB,CAAC,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAEf,MAAM,CAACa,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAnB;AACA;;AACF,WAAK,KAAL;AACEE,QAAAA,mBAAmB,CAAC,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAEf,MAAM,CAACa,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAnB;AACA;;AACF,WAAK,KAAL;AACEE,QAAAA,mBAAmB,CAAC,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAEf,MAAM,CAACa,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAnB;AACA;;AACF;AACEE,QAAAA,mBAAmB,CAAC,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAEf,MAAM,CAACa,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAnB;AAXJ;AAaD,GA9BQ,EA8BN,CAACF,YAAD,EAAeF,WAAf,EAA4BH,KAA5B,CA9BM,CAAT;;AAgCA,MAAM4E,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACjD,cAAD,EAA4B;AAC7DrB,IAAAA,eAAe,CAACqB,cAAD,CAAf;AACA6B,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACD,GAHD;;AAKA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5C,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE6C,iBADX;AAEE,IAAA,KAAK,EAAEhD,MAAM,CAACY,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAE,EAAT;AAAa9C,MAAAA,MAAM,EAAE,EAArB;AAAyB8B,MAAAA,WAAW,EAAE;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,gBADH,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACe,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkC,gBAAgB,CAACxD,YAAD,CADnB,WAPF,EAUE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAwB,IAAA,KAAK,EAAEX,MAAM,CAACa,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF,EAeGgD,uBAAuB,GACtB,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE3C,MAAM,CAACyC,aADhB;AAEE,IAAA,OAAO,EAAEO,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,YAAD;AACE,IAAA,KAAK,kCACAH,sBADA,GAEA7C,MAAM,CAACkB,wBAFP,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACkC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAM8B,0BAA0B,CAAC,KAAD,CAAhC;AAAA,KADX;AAEE,IAAA,KAAK,EAAEhE,MAAM,CAACyB,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACgC,2BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EACPvC,YAAY,KAAK,KAAjB,GAAyBX,MAAM,CAACmF,QAAhC,GAA2CnF,MAAM,CAACa,SAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAWE,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAK,MAAM,CAAC6B,cADP;AAEHb,MAAAA,KAAK,EACHvB,YAAY,KAAK,KAAjB,GAAyBX,MAAM,CAACmF,QAAhC,GAA2CnF,MAAM,CAACa;AAHjD,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,CAPF,EA4BE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMqE,0BAA0B,CAAC,KAAD,CAAhC;AAAA,KADX;AAEE,IAAA,KAAK,EAAEhE,MAAM,CAACyB,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACgC,2BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EACPvC,YAAY,KAAK,KAAjB,GAAyBX,MAAM,CAACmF,QAAhC,GAA2CnF,MAAM,CAACa,SAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAWE,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAK,MAAM,CAAC6B,cADP;AAEHb,MAAAA,KAAK,EACHvB,YAAY,KAAK,KAAjB,GAAyBX,MAAM,CAACmF,QAAhC,GAA2CnF,MAAM,CAACa;AAHjD,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,CA5BF,EAiDE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMqE,0BAA0B,CAAC,KAAD,CAAhC;AAAA,KADX;AAEE,IAAA,KAAK,EAAEhE,MAAM,CAACyB,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACgC,2BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EACPvC,YAAY,KAAK,KAAjB,GAAyBX,MAAM,CAACmF,QAAhC,GAA2CnF,MAAM,CAACa,SAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAWE,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAK,MAAM,CAAC6B,cADP;AAEHb,MAAAA,KAAK,EACHvB,YAAY,KAAK,KAAjB,GAAyBX,MAAM,CAACmF,QAAhC,GAA2CnF,MAAM,CAACa;AAHjD,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXF,CAjDF,CAJF,CADsB,GA6EpB,IA5FN,CADF;AAgGD,CAxPD;;AA0PA,eAAehB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { useTheme, useRoute } from \"@react-navigation/native\";\nimport { dropdownStyles } from \"../../../styles\";\nimport { ThemeColors } from \"../../../themes/themes\";\nimport { useSpring, animated } from \"react-spring\";\nimport Constants from \"expo-constants\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"@reddit-clone/controller\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport HotSVG from \"../../svgs/HotSVG\";\nimport TopSVG from \"../../svgs/TopSVG\";\nimport NewSVG from \"../../svgs/NewSVG\";\n\ninterface Props {\n  getPostsWithUsername?: (\n    username: string,\n    order: string,\n    time: string,\n    page: number\n  ) => void;\n  getPostsHomepage?: (order: string, time: string, page: number) => void;\n\n  defaultSort: string;\n  reducer: string;\n}\n\nconst AnimatedView: any = animated(View);\n\nconst OrderBar = (props: Props) => {\n  const theme = useTheme();\n  const colors = theme.colors as ThemeColors;\n  const statusBarHeight = Constants.statusBarHeight;\n  const windowHeight = Dimensions.get(\"window\").height;\n  const route = useRoute();\n  const {\n    getPostsHomepage,\n    getPostsWithUsername,\n    defaultSort,\n    reducer,\n  } = props;\n\n  const [activeOption, setActiveOption] = useState<string>(defaultSort);\n  const [activeOptionIcon, setActiveOptionIcon] = useState(\n    <HotSVG fillColor={colors.textMuted} />\n  );\n\n  const [timeSort, setTimeSort] = useState<string>(\"all_time\");\n\n  const styles = StyleSheet.create({\n    container: {\n      ...dropdownStyles.small,\n      backgroundColor: colors.primary,\n      justifyContent: \"center\",\n      zIndex: 0,\n      marginTop: -15,\n      marginBottom: 10,\n      marginLeft: 5,\n    },\n    selectedOptionContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n    selectedOption: {\n      color: colors.textMuted,\n      marginRight: 5,\n    },\n    dropdownOptionsContainer: {\n      //...StyleSheet.absoluteFillObject,\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      marginRight: 10,\n      marginLeft: 10,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      backgroundColor: colors.card,\n    },\n    dropdownOptionContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingTop: 10,\n      paddingBottom: 10,\n      paddingLeft: 15,\n      marginRight: 10,\n      marginLeft: 10,\n    },\n    dropdownOption: {\n      backgroundColor: colors.card,\n      alignSelf: \"stretch\",\n      textAlign: \"left\",\n      justifyContent: \"center\",\n      marginLeft: 10,\n    },\n    dropdownOptionIconContainer: {\n      width: 15,\n      height: 15,\n    },\n    dropdownOptionTitle: {\n      paddingLeft: 15,\n      backgroundColor: colors.card,\n      color: colors.textMuted,\n      marginRight: 10,\n      marginLeft: 10,\n      fontWeight: \"700\",\n      fontSize: 12,\n      paddingBottom: 10,\n      paddingTop: 10,\n      borderColor: \"transparent\",\n      borderBottomColor: colors.colorLine,\n      borderWidth: 1,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n    dropdownModal: {\n      position: \"absolute\",\n      height: windowHeight - statusBarHeight,\n      width: \"100%\",\n      backgroundColor: colors.modalColor,\n      zIndex: 900,\n    },\n  });\n\n  const [drodpdownOptionsVisible, setDropdownOptionsVisible] = useState<\n    boolean\n  >(false);\n\n  const dropdownAnimationProps = useSpring({\n    opacity: drodpdownOptionsVisible ? 1 : 0,\n    bottom: drodpdownOptionsVisible ? 0 : -200,\n  });\n\n  const handleSelectClick = () => {\n    setDropdownOptionsVisible(!drodpdownOptionsVisible);\n  };\n\n  const capitalizeString = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  const homepagePage = useSelector((state: State) => state.homepage.page);\n  const subredditPage = useSelector((state: State) => state.subreddit.page);\n  const profilePage = useSelector((state: State) => state.profile.page);\n\n  useEffect(() => {\n    if (getPostsHomepage) {\n      getPostsHomepage(activeOption, timeSort, homepagePage);\n    } else if (getPostsWithUsername) {\n      if (reducer === \"profile\") {\n      } else if (reducer === \"subreddit\") {\n        const params = route.params as { name: string };\n        if (params && params.name !== \"\") {\n          getPostsWithUsername(\n            params.name,\n            activeOption,\n            timeSort,\n            subredditPage\n          );\n        }\n      }\n    }\n    switch (activeOption) {\n      case \"hot\":\n        setActiveOptionIcon(<HotSVG fillColor={colors.textMuted} />);\n        break;\n      case \"top\":\n        setActiveOptionIcon(<TopSVG fillColor={colors.textMuted} />);\n        break;\n      case \"new\":\n        setActiveOptionIcon(<NewSVG fillColor={colors.textMuted} />);\n        break;\n      default:\n        setActiveOptionIcon(<HotSVG fillColor={colors.textMuted} />);\n    }\n  }, [activeOption, defaultSort, route]);\n\n  const handleSelectDropdownOption = (selectedOption: string) => {\n    setActiveOption(selectedOption);\n    setDropdownOptionsVisible(false);\n  };\n\n  return (\n    <React.Fragment>\n      <View style={styles.container}>\n        <TouchableOpacity\n          onPress={handleSelectClick}\n          style={styles.selectedOptionContainer}\n        >\n          <View style={{ width: 15, height: 15, marginRight: 5 }}>\n            {activeOptionIcon}\n          </View>\n          <Text style={styles.selectedOption}>\n            {capitalizeString(activeOption)} posts\n          </Text>\n          <Icon name=\"caret-down\" color={colors.textMuted} />\n        </TouchableOpacity>\n      </View>\n      {drodpdownOptionsVisible ? (\n        <TouchableOpacity\n          style={styles.dropdownModal}\n          onPress={handleSelectClick}\n        >\n          <AnimatedView\n            style={{\n              ...dropdownAnimationProps,\n              ...styles.dropdownOptionsContainer,\n            }}\n          >\n            <Text style={styles.dropdownOptionTitle}>SORT POST BY</Text>\n            <TouchableOpacity\n              onPress={() => handleSelectDropdownOption(\"hot\")}\n              style={styles.dropdownOptionContainer}\n            >\n              <View style={styles.dropdownOptionIconContainer}>\n                <HotSVG\n                  fillColor={\n                    activeOption === \"hot\" ? colors.textMain : colors.textMuted\n                  }\n                />\n              </View>\n              <Text\n                style={{\n                  ...styles.dropdownOption,\n                  color:\n                    activeOption === \"hot\" ? colors.textMain : colors.textMuted,\n                }}\n              >\n                Hot\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => handleSelectDropdownOption(\"new\")}\n              style={styles.dropdownOptionContainer}\n            >\n              <View style={styles.dropdownOptionIconContainer}>\n                <NewSVG\n                  fillColor={\n                    activeOption === \"new\" ? colors.textMain : colors.textMuted\n                  }\n                />\n              </View>\n              <Text\n                style={{\n                  ...styles.dropdownOption,\n                  color:\n                    activeOption === \"new\" ? colors.textMain : colors.textMuted,\n                }}\n              >\n                New\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => handleSelectDropdownOption(\"top\")}\n              style={styles.dropdownOptionContainer}\n            >\n              <View style={styles.dropdownOptionIconContainer}>\n                <TopSVG\n                  fillColor={\n                    activeOption === \"top\" ? colors.textMain : colors.textMuted\n                  }\n                />\n              </View>\n              <Text\n                style={{\n                  ...styles.dropdownOption,\n                  color:\n                    activeOption === \"top\" ? colors.textMain : colors.textMuted,\n                }}\n              >\n                Top\n              </Text>\n            </TouchableOpacity>\n          </AnimatedView>\n        </TouchableOpacity>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default OrderBar;\n"]},"metadata":{},"sourceType":"module"}