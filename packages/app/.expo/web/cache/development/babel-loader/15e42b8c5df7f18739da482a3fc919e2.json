{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/modules/subreddit/SubredditNavigator.tsx\";\nimport React from \"react\";\nimport { useTheme, useRoute } from \"@react-navigation/native\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport PostsConnector from \"./subredditPosts/PostsConnector\";\nimport SubredditAbout from \"./subredditInfo/SubredditAbout\";\nimport SubredditHeaderInfoConnector from \"./subredditHeaderInfo/SubredditHeaderInfoConnector\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSpring, animated } from \"react-spring\";\nvar Tab = createMaterialTopTabNavigator();\nvar AnimatedView = animated(View);\n\nvar SubredditNavigator = function SubredditNavigator() {\n  var theme = useTheme();\n  var colors = theme.colors;\n  var route = useRoute();\n  var prevValue = 0;\n\n  var _useSpring = useSpring(function () {\n    return {\n      immediate: true,\n      opacity: 1,\n      height: 1\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      height = _useSpring2[0].height,\n      setHeaderHeight = _useSpring2[1];\n\n  var styles = StyleSheet.create({\n    subredditHeader: {}\n  });\n  return React.createElement(React.Fragment, null, React.createElement(AnimatedView, {\n    style: {\n      height: height.interpolate({\n        range: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],\n        output: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200]\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(SubredditHeaderInfoConnector, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), React.createElement(Tab.Navigator, {\n    initialRouteName: \"Posts\",\n    tabBarOptions: {\n      indicatorStyle: {\n        backgroundColor: colors.highlightSelection\n      },\n      labelStyle: {\n        fontWeight: \"bold\",\n        color: colors.textMain\n      },\n      tabStyle: {\n        width: 100\n      },\n      contentContainerStyle: {\n        justifyContent: \"center\"\n      },\n      indicatorContainerStyle: {\n        marginLeft: 60\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Posts\",\n    initialParams: route.params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, function () {\n    console.log(\"aa\", height.getValue());\n    return PostsConnector({\n      setHeaderHeight: setHeaderHeight,\n      currentHeight: height.getValue()\n    });\n  }), React.createElement(Tab.Screen, {\n    name: \"About\",\n    component: SubredditAbout,\n    initialParams: route.params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Menu\",\n    component: SubredditAbout,\n    initialParams: route.params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SubredditNavigator;","map":{"version":3,"sources":["/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/modules/subreddit/SubredditNavigator.tsx"],"names":["React","useTheme","useRoute","createMaterialTopTabNavigator","PostsConnector","SubredditAbout","SubredditHeaderInfoConnector","useSpring","animated","Tab","AnimatedView","View","SubredditNavigator","theme","colors","route","prevValue","immediate","opacity","height","setHeaderHeight","styles","StyleSheet","create","subredditHeader","interpolate","range","output","indicatorStyle","backgroundColor","highlightSelection","labelStyle","fontWeight","color","textMain","tabStyle","width","contentContainerStyle","justifyContent","indicatorContainerStyle","marginLeft","params","console","log","getValue","currentHeight"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect, useRef, useEffect } from \"react\";\nimport { useTheme, useRoute } from \"@react-navigation/native\";\nimport { ThemeColors } from \"../../themes/themes\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport PostsConnector from \"./subredditPosts/PostsConnector\";\nimport SubredditAbout from \"./subredditInfo/SubredditAbout\";\nimport SubredditHeaderInfoConnector from \"./subredditHeaderInfo/SubredditHeaderInfoConnector\";\nimport {\n  View,\n  StyleSheet,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n} from \"react-native\";\nimport {\n  useSpring,\n  animated,\n  interpolate,\n  AnimatedValue,\n  InterpolationChain,\n} from \"react-spring\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nconst Tab = createMaterialTopTabNavigator();\nconst AnimatedView: any = animated(View);\n\nconst SubredditNavigator = () => {\n  const theme = useTheme();\n  const colors = theme.colors as ThemeColors;\n  const route = useRoute();\n  //const [headerHeight, setHeaderHeight] = useState(200);\n  let prevValue = 0;\n\n  const [{ height }, setHeaderHeight] = useSpring(() => ({\n    immediate: true,\n    opacity: 1,\n    height: 1,\n  }));\n\n  const styles = StyleSheet.create({\n    subredditHeader: {},\n  });\n\n  return (\n    <>\n      <AnimatedView\n        style={{\n          height: height.interpolate({\n            range: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],\n            output: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200],\n          }),\n        }}\n      >\n        <SubredditHeaderInfoConnector />\n      </AnimatedView>\n\n      <Tab.Navigator\n        initialRouteName=\"Posts\"\n        tabBarOptions={{\n          indicatorStyle: { backgroundColor: colors.highlightSelection },\n          labelStyle: { fontWeight: \"bold\", color: colors.textMain },\n          tabStyle: { width: 100 },\n          contentContainerStyle: { justifyContent: \"center\" },\n          indicatorContainerStyle: {\n            marginLeft: 60,\n          },\n        }}\n      >\n        <Tab.Screen name=\"Posts\" initialParams={route.params}>\n          {() => {\n            console.log(\"aa\", height.getValue());\n            return PostsConnector({\n              setHeaderHeight,\n              currentHeight: height.getValue() as number,\n            });\n          }}\n        </Tab.Screen>\n        <Tab.Screen\n          name=\"About\"\n          component={SubredditAbout}\n          initialParams={route.params}\n        />\n        <Tab.Screen\n          name=\"Menu\"\n          component={SubredditAbout}\n          initialParams={route.params}\n        />\n      </Tab.Navigator>\n    </>\n  );\n};\n\nexport default SubredditNavigator;\n"]},"metadata":{},"sourceType":"module"}