{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/modules/header/searchBar/ui/SearchResult.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useTheme, useNavigation } from \"@react-navigation/native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fontSizes } from \"../../../../styles\";\n\nvar SearchResult = function SearchResult(props) {\n  var name = props.name,\n      adultContent = props.adultContent,\n      memberCount = props.memberCount;\n  var theme = useTheme();\n  var colors = theme.colors;\n  var navigation = useNavigation();\n  var styles = StyleSheet.create({\n    mainContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingLeft: 20,\n      paddingTop: 10,\n      paddingBottom: 10,\n      backgroundColor: colors.colorCard\n    },\n    nameAndMemberCountContainer: {\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n      marginLeft: 10\n    },\n    subredditNameContainer: {},\n    subredditNameText: _objectSpread({\n      color: colors.textMain\n    }, fontSizes.searchResultName),\n    memberCountContainer: {},\n    memberCountText: {\n      color: colors.textMuted\n    },\n    subredditImageContainer: {\n      width: 30,\n      height: 30,\n      borderRadius: 100,\n      marginTop: 2,\n      backgroundColor: \"skyblue\"\n    }\n  });\n\n  var handleResultClick = function handleResultClick() {\n    navigation.navigate(\"subreddit\", {\n      name: name\n    });\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: styles.mainContainer,\n    onPress: handleResultClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.subredditImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.nameAndMemberCountContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.subredditNameContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subredditNameText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"r/\", name, \" \")), React.createElement(View, {\n    style: styles.memberCountContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.memberCountText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, memberCount, \" members\"))));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/ivanroldanlusich/webDev/reddit-clone/packages/app/src/modules/header/searchBar/ui/SearchResult.tsx"],"names":["React","useTheme","useNavigation","TouchableOpacity","fontSizes","SearchResult","props","name","adultContent","memberCount","theme","colors","navigation","styles","StyleSheet","create","mainContainer","flexDirection","alignItems","paddingLeft","paddingTop","paddingBottom","backgroundColor","colorCard","nameAndMemberCountContainer","marginLeft","subredditNameContainer","subredditNameText","color","textMain","searchResultName","memberCountContainer","memberCountText","textMuted","subredditImageContainer","width","height","borderRadius","marginTop","handleResultClick","navigate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { useTheme, useNavigation } from \"@react-navigation/native\";\nimport { ThemeColors } from \"../../../../themes/themes\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fontSizes } from \"../../../../styles\";\n\ninterface Props {\n  name: string;\n  adultContent: boolean;\n  memberCount: number;\n}\n\nconst SearchResult = (props: Props) => {\n  const { name, adultContent, memberCount } = props;\n  const theme = useTheme();\n  const colors = theme.colors as ThemeColors;\n  const navigation = useNavigation();\n\n  const styles = StyleSheet.create({\n    mainContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingLeft: 20,\n      paddingTop: 10,\n      paddingBottom: 10,\n      backgroundColor: colors.colorCard,\n    },\n    nameAndMemberCountContainer: {\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n      marginLeft: 10,\n    },\n    subredditNameContainer: {},\n    subredditNameText: {\n      color: colors.textMain,\n      ...fontSizes.searchResultName,\n    },\n    memberCountContainer: {},\n    memberCountText: {\n      color: colors.textMuted,\n    },\n    subredditImageContainer: {\n      width: 30,\n      height: 30,\n      borderRadius: 100,\n      marginTop: 2,\n      backgroundColor: \"skyblue\",\n    },\n  });\n\n  const handleResultClick = () => {\n    navigation.navigate(\"subreddit\", { name: name });\n  };\n\n  return (\n    <TouchableOpacity style={styles.mainContainer} onPress={handleResultClick}>\n      <View style={styles.subredditImageContainer} />\n      <View style={styles.nameAndMemberCountContainer}>\n        <View style={styles.subredditNameContainer}>\n          <Text style={styles.subredditNameText}>r/{name} </Text>\n        </View>\n        <View style={styles.memberCountContainer}>\n          <Text style={styles.memberCountText}>{memberCount} members</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}