{"ast":null,"code":"var _jsxFileName = \"/home/ivanroldanlusich/webDev/reddit-clone/packages/app/App.tsx\";\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { darkTheme, lightTheme } from \"./src/themes/themes\";\nimport Constants from \"expo-constants\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer, rootSaga } from \"@reddit-clone/controller\";\nimport HeaderConnector from \"./src/modules/header/HeaderConnector\";\nimport HomepageNavigator from \"./src/modules/homepage/HomepageNavigator\";\nimport SearchResultsScreen from \"./src/modules/header/searchBar/ui/SearchResultsScreen\";\nimport SubredditNavigator from \"./src/modules/subreddit/SubredditNavigator\";\nimport SubredditHeaderConnector from \"./src/modules/subreddit/subredditHeader/SubredditHeaderConnector\";\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nvar App = function App() {\n  var scheme = useColorScheme();\n  var statusBarHeight = Constants.statusBarHeight;\n  var Stack = createStackNavigator();\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(AppearanceProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    theme: scheme === \"dark\" ? darkTheme : lightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Homepage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Homepage\",\n    component: HomepageNavigator,\n    options: {\n      headerTitle: function headerTitle() {\n        return React.createElement(HeaderConnector, {\n          backButton: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 36\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"searchResults\",\n    component: SearchResultsScreen,\n    options: {\n      headerTitle: function headerTitle() {\n        return React.createElement(HeaderConnector, {\n          backButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 36\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"subreddit\",\n    component: SubredditNavigator,\n    options: {\n      headerTitle: function headerTitle() {\n        return React.createElement(SubredditHeaderConnector, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 36\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ivanroldanlusich/webDev/reddit-clone/packages/app/App.tsx"],"names":["React","AppearanceProvider","useColorScheme","NavigationContainer","createStackNavigator","darkTheme","lightTheme","Constants","createStore","applyMiddleware","Provider","createSagaMiddleware","rootReducer","rootSaga","HeaderConnector","HomepageNavigator","SearchResultsScreen","SubredditNavigator","SubredditHeaderConnector","sagaMiddleware","store","run","App","scheme","statusBarHeight","Stack","headerTitle"],"mappings":";AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,cAFF,QAIO,yBAJP;AAUA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,oBADF,QAIO,yBAJP;AAMA,SAASC,SAAT,EAAoBC,UAApB;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,0BAAtC;AACA,OAAOC,eAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,mBAAP;AAEA,OAAOC,kBAAP;AACA,OAAOC,wBAAP;AAEA,IAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AACA,IAAMS,KAAK,GAAGZ,WAAW,CAACI,WAAD,EAAcH,eAAe,CAACU,cAAD,CAA7B,CAAzB;AAEAA,cAAc,CAACE,GAAf,CAAmBR,QAAnB;;AAEA,IAAMS,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAMC,MAAM,GAAGrB,cAAc,EAA7B;AACA,MAAMsB,eAAe,GAAGjB,SAAS,CAACiB,eAAlC;AAIA,MAAMC,KAAK,GAAGrB,oBAAoB,EAAlC;AAEA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEgB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEG,MAAM,KAAK,MAAX,GAAoBlB,SAApB,GAAgCC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAES,iBAFb;AAGE,IAAA,OAAO,EAAE;AACPW,MAAAA,WAAW,EAAE;AAAA,eAAM,oBAAC,eAAD;AAAiB,UAAA,UAAU,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,SAAS,EAAEV,mBAFb;AAGE,IAAA,OAAO,EAAE;AACPU,MAAAA,WAAW,EAAE;AAAA,eAAM,oBAAC,eAAD;AAAiB,UAAA,UAAU,EAAE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAET,kBAFb;AAGE,IAAA,OAAO,EAAE;AACPS,MAAAA,WAAW,EAAE;AAAA,eAAM,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAAA;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADF,CADF,CADF;AA+BD,CAvCD;;AAyCA,eAAeJ,GAAf","sourcesContent":["import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport {\n  AppearanceProvider,\n  useColorScheme,\n  Appearance,\n} from \"react-native-appearance\";\nimport {\n  //useColorScheme,\n  View,\n  Text,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {\n  createStackNavigator,\n  StackHeaderProps,\n  StackHeaderLeftButtonProps,\n} from \"@react-navigation/stack\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { darkTheme, lightTheme } from \"./src/themes/themes\";\nimport OrderBar from \"./src/shared/modules/orderBar/OrderBar\";\nimport Constants from \"expo-constants\";\nimport HomepageConnector from \"./src/modules/homepage/HomepageConnector\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer, rootSaga } from \"@reddit-clone/controller\";\nimport HeaderConnector from \"./src/modules/header/HeaderConnector\";\nimport HomepageNavigator from \"./src/modules/homepage/HomepageNavigator\";\nimport SearchResultsScreen from \"./src/modules/header/searchBar/ui/SearchResultsScreen\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport SubredditNavigator from \"./src/modules/subreddit/SubredditNavigator\";\nimport SubredditHeaderConnector from \"./src/modules/subreddit/subredditHeader/SubredditHeaderConnector\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nconst App = () => {\n  const scheme = useColorScheme();\n  const statusBarHeight = Constants.statusBarHeight;\n\n  //<View style={{ marginTop: statusBarHeight }} />\n\n  const Stack = createStackNavigator();\n\n  return (\n    <Provider store={store}>\n      <AppearanceProvider>\n        <NavigationContainer theme={scheme === \"dark\" ? darkTheme : lightTheme}>\n          <Stack.Navigator initialRouteName=\"Homepage\">\n            <Stack.Screen\n              name=\"Homepage\"\n              component={HomepageNavigator}\n              options={{\n                headerTitle: () => <HeaderConnector backButton={false} />,\n              }}\n            />\n            <Stack.Screen\n              name=\"searchResults\"\n              component={SearchResultsScreen}\n              options={{\n                headerTitle: () => <HeaderConnector backButton={true} />,\n              }}\n            />\n            <Stack.Screen\n              name=\"subreddit\"\n              component={SubredditNavigator}\n              options={{\n                headerTitle: () => <SubredditHeaderConnector />,\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </AppearanceProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}